{"ast":null,"code":"var _jsxFileName = \"/home/diegomxm/documents/projects/rocketseat/ignite-aulas/reactjs/finance-control/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport const TransactionsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('/transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  const createTransaction = transaction => {\n    api.post('/transactions', transaction);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionsProvider, \"ExZy7LBfr+eBbYSjwXpKp3aW+80=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transaction","post"],"sources":["/home/diegomxm/documents/projects/rocketseat/ignite-aulas/reactjs/finance-control/src/TransactionsContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState, ReactNode } from 'react';\nimport { api } from './services/api';\n\ninterface Transaction {\n    id: number;\n    title: string;\n    amount: number;\n    type: string;\n    category: string;\n    createdAt: string;\n}\n\n/*interface TransactionInput {\n    title: string;\n    amount: number;\n    type: string;\n    category: string;\n}*/\n\n// type TransactionInput = Omit<Transaction, 'id | 'createdAt>;\n\ntype TransactionInput = Pick<Transaction, 'title' | 'amount' | 'type' | 'category'>;\ninterface TransactionsProviderProps {\n    children: ReactNode;\n}\n\nexport const TransactionsContext = createContext<Transaction[]>([]);\n\nexport const TransactionsProvider = ({ children }: TransactionsProviderProps) => {\n    const [ transactions, setTransactions ] = useState<Transaction[]>([]);\n\n    useEffect(() => {\n        api.get('/transactions')\n        .then((response: any) =>setTransactions(response.data.transactions))\n    }, []);\n\n    const createTransaction = (transaction) => {\n          api.post('/transactions', transaction);\n    }\n\n    return (\n        <TransactionsContext.Provider value={transactions}>\n            {children}\n        </TransactionsContext.Provider>\n    )\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAyBA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAgB,EAAhB,CAAzC;AAEP,OAAO,MAAMK,oBAAoB,GAAG,QAA6C;EAAA;;EAAA,IAA5C;IAAEC;EAAF,CAA4C;EAC7E,MAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCN,QAAQ,CAAgB,EAAhB,CAAlD;EAEAD,SAAS,CAAC,MAAM;IACZE,GAAG,CAACM,GAAJ,CAAQ,eAAR,EACCC,IADD,CACOC,QAAD,IAAkBH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADvC;EAEH,CAHQ,EAGN,EAHM,CAAT;;EAKA,MAAMM,iBAAiB,GAAIC,WAAD,IAAiB;IACrCX,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0BD,WAA1B;EACL,CAFD;;EAIA,oBACI,QAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAEP,YAArC;IAAA,UACKD;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAjBM;;GAAMD,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}