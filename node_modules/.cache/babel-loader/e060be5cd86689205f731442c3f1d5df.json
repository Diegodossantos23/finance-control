{"ast":null,"code":"var _jsxFileName = \"/home/diegomxm/documents/projects/rocketseat/ignite-aulas/reactjs/finance-control/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { api } from './services';\nimport { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput) {\n    const response = await api.post('/transactions', { ...transactionInput,\n      createdAt: new Date()\n    });\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["api","createContext","useEffect","useState","TransactionsContext","TransactionProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transactionInput","post","createdAt","Date","transaction"],"sources":["/home/diegomxm/documents/projects/rocketseat/ignite-aulas/reactjs/finance-control/src/TransactionsContext.tsx"],"sourcesContent":["import { api } from './services';\nimport { createContext, useEffect, useState, ReactNode, useContext } from 'react';\n\ninterface Transaction {\n  id: number;\n  title: string;\n  amount: number;\n  type: string;\n  category: string;\n  createdAt: string;\n}\n\ninterface TransactionsContextData {\n  transactions: Transaction[];\n  createTransaction: (transaction: TransactionInput) => Promise<void>;\n}\n\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>\n\ninterface TransactionProviderProps {\n  children: ReactNode;\n}\n\nconst TransactionsContext = createContext<TransactionsContextData>(\n  {} as TransactionsContextData\n);\n\nexport function TransactionProvider({ children }: TransactionProviderProps ) {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  useEffect(() => {\n    api.get('transactions')\n    .then(response => setTransactions(response.data.transactions))\n  }, []);\n\n  async function createTransaction(transactionInput: TransactionInput) {\n    const response = await api.post('/transactions', {\n      ...transactionInput,\n      createdAt: new Date(),\n    })\n    const { transaction } = response.data;\n    setTransactions([\n      ...transactions, \n      transaction,\n    ]);\n  }\n\n  return (\n    <TransactionsContext.Provider value={{ transactions, createTransaction }}>\n      { children }\n    </TransactionsContext.Provider>\n  )\n\n}"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,YAApB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAA0E,OAA1E;;AAsBA,MAAMC,mBAAmB,gBAAGH,aAAa,CACvC,EADuC,CAAzC;AAIA,OAAO,SAASI,mBAAT,OAAsE;EAAA;;EAAA,IAAzC;IAAEC;EAAF,CAAyC;EAC3E,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAgB,EAAhB,CAAhD;EAEAD,SAAS,CAAC,MAAM;IACdF,GAAG,CAACS,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADjC;EAED,CAHQ,EAGN,EAHM,CAAT;;EAKA,eAAeM,iBAAf,CAAiCC,gBAAjC,EAAqE;IACnE,MAAMH,QAAQ,GAAG,MAAMX,GAAG,CAACe,IAAJ,CAAS,eAAT,EAA0B,EAC/C,GAAGD,gBAD4C;MAE/CE,SAAS,EAAE,IAAIC,IAAJ;IAFoC,CAA1B,CAAvB;IAIA,MAAM;MAAEC;IAAF,IAAkBP,QAAQ,CAACC,IAAjC;IACAJ,eAAe,CAAC,CACd,GAAGD,YADW,EAEdW,WAFc,CAAD,CAAf;EAID;;EAED,oBACE,QAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAE;MAAEX,YAAF;MAAgBM;IAAhB,CAArC;IAAA,UACIP;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA1BeD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}